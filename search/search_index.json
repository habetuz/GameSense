{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the GameSense SDK for .Net \u00b6 The GameSense SDK for .Net with some additional features. With GameSense you are able to control the LED's of your keyboard and and other products by SteelSeries. Installation and usage under Getting started . Full documentation under Reference. Check out the GameSense SDK by SteelSeries. Features \u00b6 Manual requests to the GameSense Engine Animation for your keyboard as background Animation for your keyboard on key strokes Example \u00b6 In this example GameSense gets started and setup with a gradient background and a key stroke fade for the keyboard. GameSense . Controller . Background = new KeyboardGradient ( new int [] { 255 , 85 , 0 }, new int [] { 0 , 196 , 255 }, 4 , 2 ); GameSense . Controller . DefaultKeyAnimation = new KeyFade (); GameSense . Controller . GameName = \"TEST\" ; GameSense . Controller . GameDisplayName = \"Test\" ; GameSense . Controller . Developer = \"John Doe\" ;","title":"Home"},{"location":"#welcome-to-the-gamesense-sdk-for-net","text":"The GameSense SDK for .Net with some additional features. With GameSense you are able to control the LED's of your keyboard and and other products by SteelSeries. Installation and usage under Getting started . Full documentation under Reference. Check out the GameSense SDK by SteelSeries.","title":"Welcome to the GameSense SDK for .Net"},{"location":"#features","text":"Manual requests to the GameSense Engine Animation for your keyboard as background Animation for your keyboard on key strokes","title":"Features"},{"location":"#example","text":"In this example GameSense gets started and setup with a gradient background and a key stroke fade for the keyboard. GameSense . Controller . Background = new KeyboardGradient ( new int [] { 255 , 85 , 0 }, new int [] { 0 , 196 , 255 }, 4 , 2 ); GameSense . Controller . DefaultKeyAnimation = new KeyFade (); GameSense . Controller . GameName = \"TEST\" ; GameSense . Controller . GameDisplayName = \"Test\" ; GameSense . Controller . Developer = \"John Doe\" ;","title":"Example"},{"location":"Getting%20started/","text":"Getting started \u00b6 Installation \u00b6 Install the package from nuget . Usage \u00b6 Setup \u00b6 GameSense automatically starts when... ... GameDisplayName ... ... Developer ... ... GameName ... ...are set. Note Those three values are needed to register the events and the game in the GameSense Engine. Note that GameName is limited to uppercase A-Z, 0-9, hyphen, and underscore characters. GameSense . Controller . GameName = \"TEST\" ; GameSense . Controller . GameDisplayName = \"Test\" ; GameSense . Controller . Developer = \"John Doe\" ; Activating a keyboard background \u00b6 Sending requests manually \u00b6 To send a request to the GameSense Engine create a BaseRequest and send it using the Transmitter . See the GameSense SDK docs for more information on requests. GameSense . Struct . Request . BaseRequest request = new GameSense . Struct . BaseRequest { Game = \"KALE\" }; GameSense . Transmitter . Send ( request , \"game_heartbeat\" );","title":"Getting started"},{"location":"Getting%20started/#getting-started","text":"","title":"Getting started"},{"location":"Getting%20started/#installation","text":"Install the package from nuget .","title":"Installation"},{"location":"Getting%20started/#usage","text":"","title":"Usage"},{"location":"Getting%20started/#setup","text":"GameSense automatically starts when... ... GameDisplayName ... ... Developer ... ... GameName ... ...are set. Note Those three values are needed to register the events and the game in the GameSense Engine. Note that GameName is limited to uppercase A-Z, 0-9, hyphen, and underscore characters. GameSense . Controller . GameName = \"TEST\" ; GameSense . Controller . GameDisplayName = \"Test\" ; GameSense . Controller . Developer = \"John Doe\" ;","title":"Setup"},{"location":"Getting%20started/#activating-a-keyboard-background","text":"","title":"Activating a keyboard background"},{"location":"Getting%20started/#sending-requests-manually","text":"To send a request to the GameSense Engine create a BaseRequest and send it using the Transmitter . See the GameSense SDK docs for more information on requests. GameSense . Struct . Request . BaseRequest request = new GameSense . Struct . BaseRequest { Game = \"KALE\" }; GameSense . Transmitter . Send ( request , \"game_heartbeat\" );","title":"Sending requests manually"},{"location":"Reference/Controller/","text":"Controller \u00b6 Source namespace GameSense public static class Controller Controls the GameSense SDK. Will do the most things you need. Summary \u00b6 Properties \u00b6 public static \u00b6 Type Property Get Set IKeyboardAnimator KeyboardBackground IKeyAnimator DefaultKeyAnimation IMouseAnimator MouseBackground string GameName string GameDisplayName string Developer Methods \u00b6 public static \u00b6 Returns Method void Stop () Properties \u00b6 KeyboardBackground \u00b6 Source \u00b7 Default: none public static IKeyboardAnimator KeyboardBackground { set ;} Sets the IKeyboardAnimator used for the keyboard background. DefaultKeyAnimation \u00b6 Source \u00b7 Default: none public static IKeyAnimator DefaultKeyAnimation { set ;} Sets the IKeyAnimator used on key strokes. MouseBackground \u00b6 Source \u00b7 Default: none \u00b7 Not Implemented! public static IMouseAnimator MouseBackground { set ;} Sets the IMouseAnimator used as mouse background. GameName \u00b6 Source \u00b7 Default: none public static IMouseAnimator MouseBackground { set ;} Sets the name of the game. Naming restrictions Name is limited to uppercase A-Z, 0-9, hyphen, and underscore characters. Methods \u00b6 Stop \u00b6 Source public static void Stop () Stops GameSense. Should be called at the end of the program.","title":"Controller"},{"location":"Reference/Controller/#controller","text":"Source namespace GameSense public static class Controller Controls the GameSense SDK. Will do the most things you need.","title":"Controller"},{"location":"Reference/Controller/#summary","text":"","title":"Summary"},{"location":"Reference/Controller/#properties","text":"","title":"Properties"},{"location":"Reference/Controller/#public-static","text":"Type Property Get Set IKeyboardAnimator KeyboardBackground IKeyAnimator DefaultKeyAnimation IMouseAnimator MouseBackground string GameName string GameDisplayName string Developer","title":"public static"},{"location":"Reference/Controller/#methods","text":"","title":"Methods"},{"location":"Reference/Controller/#public-static_1","text":"Returns Method void Stop ()","title":"public static"},{"location":"Reference/Controller/#properties_1","text":"","title":"Properties"},{"location":"Reference/Controller/#keyboardbackground","text":"Source \u00b7 Default: none public static IKeyboardAnimator KeyboardBackground { set ;} Sets the IKeyboardAnimator used for the keyboard background.","title":"KeyboardBackground"},{"location":"Reference/Controller/#defaultkeyanimation","text":"Source \u00b7 Default: none public static IKeyAnimator DefaultKeyAnimation { set ;} Sets the IKeyAnimator used on key strokes.","title":"DefaultKeyAnimation"},{"location":"Reference/Controller/#mousebackground","text":"Source \u00b7 Default: none \u00b7 Not Implemented! public static IMouseAnimator MouseBackground { set ;} Sets the IMouseAnimator used as mouse background.","title":"MouseBackground"},{"location":"Reference/Controller/#gamename","text":"Source \u00b7 Default: none public static IMouseAnimator MouseBackground { set ;} Sets the name of the game. Naming restrictions Name is limited to uppercase A-Z, 0-9, hyphen, and underscore characters.","title":"GameName"},{"location":"Reference/Controller/#methods_1","text":"","title":"Methods"},{"location":"Reference/Controller/#stop","text":"Source public static void Stop () Stops GameSense. Should be called at the end of the program.","title":"Stop"},{"location":"Reference/Key/","text":"Key \u00b6 Source namespace GameSense public enum Key Keyboard keys and their index in the KeyboardFrame . Fields \u00b6 Name Value Escape 1 F1 2 F2 3 F3 4 F4 5 F5 6 F6 7 F7 8 F8 9 F9 10 F10 11 F11 12 F12 13 PrintScreen 15 Scroll 16 Pause 17 Oem5 22 D1 23 D2 24 D3 25 D4 26 D5 27 D6 28 D7 29 D8 30 D9 31 D0 32 OemOpenBrackets 33 Oem6 34 Back 35 Insert 37 Home 38 PageUp 39 NumLock 40 Divide 41 Multiply 42 Subtract 43 Tab 44 Q 45 W 46 E 47 R 48 T 49 Z 50 U 51 I 52 O 53 P 54 Oem1 55 OemPlus 56 Delete 59 End 60 Next 61 NumPad7 62 NumPad8 63 NumPad9 64 Add 65 Capital 66 A 67 S 68 D 69 F 70 G 71 H 72 J 73 K 74 L 75 Oemtilde 76 Oem7 77 OemQuestion 78 Return 79 NumPad4 84 NumPad5 85 NumPad6 86 LShiftKey 88 OemBackslash 89 Y 90 X 91 C 92 V 93 B 94 N 95 M 96 Oemcomma 97 OemPeriod 98 OemMinus 99 RShiftKey 100 Up 104 NumPad1 106 NumPad2 107 NumPad3 108 LControlKey 110 LWin 111 LMenu 112 Space 116 RMenu 120 RWin 121 Steelseries 122 RControlKey 123 Left 125 Down 126 Right 127 NumPad0 129 Decimal 130","title":"Key"},{"location":"Reference/Key/#key","text":"Source namespace GameSense public enum Key Keyboard keys and their index in the KeyboardFrame .","title":"Key"},{"location":"Reference/Key/#fields","text":"Name Value Escape 1 F1 2 F2 3 F3 4 F4 5 F5 6 F6 7 F7 8 F8 9 F9 10 F10 11 F11 12 F12 13 PrintScreen 15 Scroll 16 Pause 17 Oem5 22 D1 23 D2 24 D3 25 D4 26 D5 27 D6 28 D7 29 D8 30 D9 31 D0 32 OemOpenBrackets 33 Oem6 34 Back 35 Insert 37 Home 38 PageUp 39 NumLock 40 Divide 41 Multiply 42 Subtract 43 Tab 44 Q 45 W 46 E 47 R 48 T 49 Z 50 U 51 I 52 O 53 P 54 Oem1 55 OemPlus 56 Delete 59 End 60 Next 61 NumPad7 62 NumPad8 63 NumPad9 64 Add 65 Capital 66 A 67 S 68 D 69 F 70 G 71 H 72 J 73 K 74 L 75 Oemtilde 76 Oem7 77 OemQuestion 78 Return 79 NumPad4 84 NumPad5 85 NumPad6 86 LShiftKey 88 OemBackslash 89 Y 90 X 91 C 92 V 93 B 94 N 95 M 96 Oemcomma 97 OemPeriod 98 OemMinus 99 RShiftKey 100 Up 104 NumPad1 106 NumPad2 107 NumPad3 108 LControlKey 110 LWin 111 LMenu 112 Space 116 RMenu 120 RWin 121 Steelseries 122 RControlKey 123 Left 125 Down 126 Right 127 NumPad0 129 Decimal 130","title":"Fields"},{"location":"Reference/KeyboardFrame/","text":"KeyboardFrame \u00b6 Source namespace GameSense public class KeyboardFrame A class that contains a color bitmap for a full keyboard effect. See the GameSense SDK docs for more information on full keyboard effects. Summary \u00b6 Constructors \u00b6 Constructor KeyboardFrame () Properties \u00b6 public \u00b6 Type Property Get Set int[][] Bitmap Methods \u00b6 public \u00b6 Returns Method KeyboardFrame SetColor (int index, int r, int g, int b) KeyboardFrame SetColor (int index, int[] color) KeyboardFrame Copy () Constructors \u00b6 KeyboardFrame \u00b6 Source public KeyboardFrame () Initializes a new instance of the class. Properties \u00b6 Bitmap \u00b6 Source \u00b7 Default: A 132 by 3 int array filled with zeros. public int [][] Bitmap { get ; set ;} Gets or sets the color bitmap. This bitmap is used by the GameSense Engine to map a 22x6 grid to the keys of the keyboard. Methods \u00b6 SetColor \u00b6 Source public KeyboardFrame SetColor ( int index , int r , int g , int b ) Sets a color in the Bitmap . Returns \u00b6 Itself Parameters \u00b6 Type Name Description Default int index The index of the Bitmap or a Key to set the color of a specific key - int r The red channel value - int g The green channel value - int b The blue channel value - SetColor \u00b6 Source public KeyboardFrame SetColor ( int index , int [] color ) Sets a color in the Bitmap . Returns \u00b6 Itself Parameters \u00b6 Type Name Description Default int index The index of the Bitmap or a Key to set the color of a specific key - int[] color The color to be set (RGB format) - Copy \u00b6 Source public KeyboardFrame Copy () Creates a copy of itself. Returns \u00b6 The copied version of itself.","title":"KeyboardFrame"},{"location":"Reference/KeyboardFrame/#keyboardframe","text":"Source namespace GameSense public class KeyboardFrame A class that contains a color bitmap for a full keyboard effect. See the GameSense SDK docs for more information on full keyboard effects.","title":"KeyboardFrame"},{"location":"Reference/KeyboardFrame/#summary","text":"","title":"Summary"},{"location":"Reference/KeyboardFrame/#constructors","text":"Constructor KeyboardFrame ()","title":"Constructors"},{"location":"Reference/KeyboardFrame/#properties","text":"","title":"Properties"},{"location":"Reference/KeyboardFrame/#public","text":"Type Property Get Set int[][] Bitmap","title":"public"},{"location":"Reference/KeyboardFrame/#methods","text":"","title":"Methods"},{"location":"Reference/KeyboardFrame/#public_1","text":"Returns Method KeyboardFrame SetColor (int index, int r, int g, int b) KeyboardFrame SetColor (int index, int[] color) KeyboardFrame Copy ()","title":"public"},{"location":"Reference/KeyboardFrame/#constructors_1","text":"","title":"Constructors"},{"location":"Reference/KeyboardFrame/#keyboardframe_1","text":"Source public KeyboardFrame () Initializes a new instance of the class.","title":"KeyboardFrame"},{"location":"Reference/KeyboardFrame/#properties_1","text":"","title":"Properties"},{"location":"Reference/KeyboardFrame/#bitmap","text":"Source \u00b7 Default: A 132 by 3 int array filled with zeros. public int [][] Bitmap { get ; set ;} Gets or sets the color bitmap. This bitmap is used by the GameSense Engine to map a 22x6 grid to the keys of the keyboard.","title":"Bitmap"},{"location":"Reference/KeyboardFrame/#methods_1","text":"","title":"Methods"},{"location":"Reference/KeyboardFrame/#setcolor","text":"Source public KeyboardFrame SetColor ( int index , int r , int g , int b ) Sets a color in the Bitmap .","title":"SetColor"},{"location":"Reference/KeyboardFrame/#returns","text":"Itself","title":"Returns"},{"location":"Reference/KeyboardFrame/#parameters","text":"Type Name Description Default int index The index of the Bitmap or a Key to set the color of a specific key - int r The red channel value - int g The green channel value - int b The blue channel value -","title":"Parameters"},{"location":"Reference/KeyboardFrame/#setcolor_1","text":"Source public KeyboardFrame SetColor ( int index , int [] color ) Sets a color in the Bitmap .","title":"SetColor"},{"location":"Reference/KeyboardFrame/#returns_1","text":"Itself","title":"Returns"},{"location":"Reference/KeyboardFrame/#parameters_1","text":"Type Name Description Default int index The index of the Bitmap or a Key to set the color of a specific key - int[] color The color to be set (RGB format) -","title":"Parameters"},{"location":"Reference/KeyboardFrame/#copy","text":"Source public KeyboardFrame Copy () Creates a copy of itself.","title":"Copy"},{"location":"Reference/KeyboardFrame/#returns_2","text":"The copied version of itself.","title":"Returns"},{"location":"Reference/MouseZone/","text":"MouseZone \u00b6 Source \u00b7 Not Implemented!","title":"MouseZone"},{"location":"Reference/MouseZone/#mousezone","text":"Source \u00b7 Not Implemented!","title":"MouseZone"},{"location":"Reference/Transmitter/","text":"Transmitter \u00b6 Source namespace GameSense public static class Transmitter Responsible for communication between GameSense and the GameSense Engine. Summary \u00b6 Methods \u00b6 public static \u00b6 Returns Method void Send ( BaseRequest request, string endpoint) Methods \u00b6 Send \u00b6 Source public static async void Send ( BaseRequest request , string endpoint ) Sends a BaseRequest to an endpoint of the GameSense Engine. Endpoints Read the GameSense SDK documentation for more information about endpoints. Parameters \u00b6 Type Name Description BaseRequest request The request to be send string endpoint The endpoint where the request should be send","title":"Transmitter"},{"location":"Reference/Transmitter/#transmitter","text":"Source namespace GameSense public static class Transmitter Responsible for communication between GameSense and the GameSense Engine.","title":"Transmitter"},{"location":"Reference/Transmitter/#summary","text":"","title":"Summary"},{"location":"Reference/Transmitter/#methods","text":"","title":"Methods"},{"location":"Reference/Transmitter/#public-static","text":"Returns Method void Send ( BaseRequest request, string endpoint)","title":"public static"},{"location":"Reference/Transmitter/#methods_1","text":"","title":"Methods"},{"location":"Reference/Transmitter/#send","text":"Source public static async void Send ( BaseRequest request , string endpoint ) Sends a BaseRequest to an endpoint of the GameSense Engine. Endpoints Read the GameSense SDK documentation for more information about endpoints.","title":"Send"},{"location":"Reference/Transmitter/#parameters","text":"Type Name Description BaseRequest request The request to be send string endpoint The endpoint where the request should be send","title":"Parameters"},{"location":"Reference/Animation/ColorManipulation/","text":"","title":"ColorManipulation"},{"location":"Reference/Animation/IKeyAnimator/","text":"","title":"IKeyAnimator"},{"location":"Reference/Animation/IKeyboardAnimator/","text":"","title":"IKeyboardAnimator"},{"location":"Reference/Animation/IMouseAnimator/","text":"","title":"IMouseAnimator"},{"location":"Reference/Animation/IMousePadAnimator/","text":"","title":"IMousePadAnimator"},{"location":"Reference/Animation/KeyFade/","text":"","title":"KeyFade"},{"location":"Reference/Animation/KeyboardGradient/","text":"","title":"KeyboardGradient"},{"location":"Reference/Animation/MouseGradient/","text":"","title":"MouseGradient"},{"location":"Reference/Struct/Request/BaseRequest/","text":"BaseRequest \u00b6 Source namespace GameSense.Struct.Request public struct BaseRequest Request that can be send to the GameSense Engine using the Transmitter . Properties \u00b6 Type Name Description string Game More information here . game string GameDisplayName More information here . game_display_name string Developer More information here . developer string Event More information here . event int MinValue More information here . min_value int MaxValue More information here . max_value int IconId More information here . icon_id bool ValueOptional More information here . value_optional Handler [] Handlers More information here . handler EventBinder [] Events More information here . events","title":"BaseRequest"},{"location":"Reference/Struct/Request/BaseRequest/#baserequest","text":"Source namespace GameSense.Struct.Request public struct BaseRequest Request that can be send to the GameSense Engine using the Transmitter .","title":"BaseRequest"},{"location":"Reference/Struct/Request/BaseRequest/#properties","text":"Type Name Description string Game More information here . game string GameDisplayName More information here . game_display_name string Developer More information here . developer string Event More information here . event int MinValue More information here . min_value int MaxValue More information here . max_value int IconId More information here . icon_id bool ValueOptional More information here . value_optional Handler [] Handlers More information here . handler EventBinder [] Events More information here . events","title":"Properties"},{"location":"Reference/Struct/Request/Color/","text":"Color \u00b6 Source namespace GameSense.Struct.Request public struct Color Represents a RGB color. More information here . Properties \u00b6 Type Name Description int Red Value from 0 to 255. More information here . red int Green Value from 0 to 255. More information here . green int Blue Value from 0 to 255. More information here . blue","title":"Color"},{"location":"Reference/Struct/Request/Color/#color","text":"Source namespace GameSense.Struct.Request public struct Color Represents a RGB color. More information here .","title":"Color"},{"location":"Reference/Struct/Request/Color/#properties","text":"Type Name Description int Red Value from 0 to 255. More information here . red int Green Value from 0 to 255. More information here . green int Blue Value from 0 to 255. More information here . blue","title":"Properties"},{"location":"Reference/Struct/Request/ColorHandler/","text":"ColorHandler \u00b6 Source namespace GameSense.Struct.Request public struct Color Represents a color handler holder. More information here . Properties \u00b6 Type Name Description ColorHandlerGradient Gradient More information here . gradient","title":"ColorHandler"},{"location":"Reference/Struct/Request/ColorHandler/#colorhandler","text":"Source namespace GameSense.Struct.Request public struct Color Represents a color handler holder. More information here .","title":"ColorHandler"},{"location":"Reference/Struct/Request/ColorHandler/#properties","text":"Type Name Description ColorHandlerGradient Gradient More information here . gradient","title":"Properties"},{"location":"Reference/Struct/Request/ColorHandlerGradient/","text":"ColorHandlerGradient \u00b6 Source namespace GameSense.Struct.Request public struct ColorHandlerGradient Represents a color gradient color handler. More information here . Properties \u00b6 Type Name Description Color Zero More information here . zero Color Hundred More information here . hundred","title":"ColorHandlerGradient"},{"location":"Reference/Struct/Request/ColorHandlerGradient/#colorhandlergradient","text":"Source namespace GameSense.Struct.Request public struct ColorHandlerGradient Represents a color gradient color handler. More information here .","title":"ColorHandlerGradient"},{"location":"Reference/Struct/Request/ColorHandlerGradient/#properties","text":"Type Name Description Color Zero More information here . zero Color Hundred More information here . hundred","title":"Properties"},{"location":"Reference/Struct/Request/EventBinder/","text":"EventBinder \u00b6 Source namespace GameSense.Struct.Request public struct EventBinder Holds information about an event. More information here . Properties \u00b6 Type Name Description string Event More information here . event Data Data More information here . data","title":"EventBinder"},{"location":"Reference/Struct/Request/EventBinder/#eventbinder","text":"Source namespace GameSense.Struct.Request public struct EventBinder Holds information about an event. More information here .","title":"EventBinder"},{"location":"Reference/Struct/Request/EventBinder/#properties","text":"Type Name Description string Event More information here . event Data Data More information here . data","title":"Properties"},{"location":"Reference/Struct/Request/EventData/","text":"EventData \u00b6 Source namespace GameSense.Struct.Request public struct EventData Holds data of an event. More information here . Properties \u00b6 Type Name Description int Value More information here . value KeyboardFrame Frame More information here . frame","title":"EventData"},{"location":"Reference/Struct/Request/EventData/#eventdata","text":"Source namespace GameSense.Struct.Request public struct EventData Holds data of an event. More information here .","title":"EventData"},{"location":"Reference/Struct/Request/EventData/#properties","text":"Type Name Description int Value More information here . value KeyboardFrame Frame More information here . frame","title":"Properties"},{"location":"Reference/Struct/Request/Handler/","text":"Handler \u00b6 Source namespace GameSense.Struct.Request public struct Handler Represents an event handler. More information here . Properties \u00b6 Type Name Description string DeviceType More information here . device-type string Zone More information here . zone string Mode More information here . color ColorHandler Color More information here . mode","title":"Handler"},{"location":"Reference/Struct/Request/Handler/#handler","text":"Source namespace GameSense.Struct.Request public struct Handler Represents an event handler. More information here .","title":"Handler"},{"location":"Reference/Struct/Request/Handler/#properties","text":"Type Name Description string DeviceType More information here . device-type string Zone More information here . zone string Mode More information here . color ColorHandler Color More information here . mode","title":"Properties"}]}